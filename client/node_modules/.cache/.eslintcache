[{"/Users/nakaeakihiro/Desktop/pern-todo/client/src/index.js":"1","/Users/nakaeakihiro/Desktop/pern-todo/client/src/App.js":"2","/Users/nakaeakihiro/Desktop/pern-todo/client/src/component/InputTodo.js":"3","/Users/nakaeakihiro/Desktop/pern-todo/client/src/component/ListTodos.js":"4","/Users/nakaeakihiro/Desktop/pern-todo/client/src/component/EditTodo.js":"5"},{"size":468,"mtime":1651902983634,"results":"6","hashOfConfig":"7"},{"size":337,"mtime":1651917678495,"results":"8","hashOfConfig":"7"},{"size":1131,"mtime":1651975555250,"results":"9","hashOfConfig":"7"},{"size":1676,"mtime":1651973542354,"results":"10","hashOfConfig":"7"},{"size":2124,"mtime":1651975877854,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1it6hy9",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/nakaeakihiro/Desktop/pern-todo/client/src/index.js",[],[],[],"/Users/nakaeakihiro/Desktop/pern-todo/client/src/App.js",[],[],"/Users/nakaeakihiro/Desktop/pern-todo/client/src/component/InputTodo.js",["30"],[],"/Users/nakaeakihiro/Desktop/pern-todo/client/src/component/ListTodos.js",["31"],[],"import React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\nconst ListTodos = () => {\n    const [todos, setTodos] = useState([]);\n    const getTodos = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/todos');\n            const jsonData = await response.json();\n\n            setTodos(jsonData);\n        } catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    const deleteTodo = async (id) => {\n        try {\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n                method: 'DELETE'\n            })\n            setTodos(todos.filter(todo => todo.todo_id !== id));\n        } catch (e) {\n            console.log(e.message);\n        }\n    };\n\n    useEffect(() => {\n        getTodos();\n    }, [])\n    console.log(todos);\n    return (\n        <Fragment>\n            <table className=\"table mt-5 text-center\">\n                <thead>\n                    <tr>\n                        <th>Description</th>\n                        <th>Edit</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {todos.map(todo => (\n                        <tr key={todo.todo_id}>\n                            <td>{todo.description}</td>\n                            <td><EditTodo todo={todo} /></td>\n                            <td><button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.todo_id)}>Delete</button></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </Fragment>\n    );\n}\n\nexport default ListTodos;","/Users/nakaeakihiro/Desktop/pern-todo/client/src/component/EditTodo.js",["32"],[],"import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n    const [description, setDescription] = useState(todo.description);\n\n    const updateDescription = async (e) => {\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n                method: 'PUT',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n            window.location = \"/\";\n        } catch (e) {\n            console.error(e.message);\n        }\n    }\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${todo.todo_id}`}>\n                Edit\n            </button>\n            <div className=\"modal fade\" id={`id${todo.todo_id}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Todo</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <input type=\"text\" className=\"form-control\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={(e) => updateDescription(e)}>Edit</button>\n                        <button type=\"button\" className=\"btn btn-danger\">Close</button>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n\nexport default EditTodo;",{"ruleId":"33","severity":1,"message":"34","line":9,"column":19,"nodeType":"35","messageId":"36","endLine":9,"endColumn":27},{"ruleId":"33","severity":1,"message":"37","line":19,"column":19,"nodeType":"35","messageId":"36","endLine":19,"endColumn":29},{"ruleId":"33","severity":1,"message":"34","line":10,"column":19,"nodeType":"35","messageId":"36","endLine":10,"endColumn":27},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used."]